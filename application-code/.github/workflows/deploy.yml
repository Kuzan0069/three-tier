name: CI/CD with SonarCloud Quality Gate and EC2 Deployment

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      # ‚úÖ Step 1: Checkout your code
      - name: Checkout code
        uses: actions/checkout@v4
        run: echo "Code checked out successfully"

      # ‚úÖ Step 2: SonarCloud Code Analysis
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@f96b7c0123b39b87f9233a9fd94a1fd2a12345cd
        with:
          projectBaseDir: .
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: "https://sonarcloud.io"

      # ‚úÖ Step 3: Login to Docker Hub
      - name: Docker Login
        uses: docker/login-action@f4efb0a4dfc8b90f8f4ce8c49b57b8f1fb9aef3b
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - run: echo "Logged in to Docker Hub successfully"

      # ‚úÖ Step 4: Build & Push Backend Image
      - name: Build & Push Backend
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        run: |
          echo "Building backend image..."
          docker build -t $DOCKERHUB_USERNAME/application-code-backend:latest ./app-tier

          echo "Pushing backend image to Docker Hub..."
          docker push $DOCKERHUB_USERNAME/application-code-backend:latest

          echo "Backend image built and pushed successfully!"

      # ‚úÖ Step 5: Build & Push Frontend Image
      - name: Build & Push Frontend
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        run: |
          echo "Building frontend image..."
          docker build -t $DOCKERHUB_USERNAME/application-code-frontend:latest ./web-tier

          echo "Pushing frontend image to Docker Hub..."
          docker push $DOCKERHUB_USERNAME/application-code-frontend:latest
          
          echo "Frontend image built and pushed successfully!"

      # ‚úÖ Step 6: SSH into EC2 and Deploy
      - name: SSH and Deploy
        uses: appleboy/ssh-action@14f4c7e6adadb70bdb2f173a52a4213d705df15b
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKER_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
          DB_ROOT_PASSWORD: ${{ secrets.DB_ROOT_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            echo "üîë Connecting to EC2 instance..."
            docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_TOKEN
            echo "Docker login on EC2 successful!"

            echo "Stopping old containers..."
            docker stop frontend backend db || true
            docker rm frontend backend db || true
            echo "Old containers stopped and removed."

            echo "üì¶ Pulling latest images from Docker Hub..."
            docker pull $DOCKERHUB_USERNAME/application-code-frontend:latest
            docker pull $DOCKERHUB_USERNAME/application-code-backend:latest
            docker pull mysql:5.7
            echo "Images pulled successfully!"

            echo "Starting database container..."
            docker run -d --name db \
              -e MYSQL_ROOT_PASSWORD=$DB_ROOT_PASSWORD \
              -e MYSQL_DATABASE=$DB_NAME \
              -e MYSQL_USER=$DB_USER \
              -e MYSQL_PASSWORD=$DB_PASSWORD \
              -p 3306:3306 \
              mysql:5.7
            echo "Database container running."

            echo "‚öôÔ∏è Starting backend container..."
            docker run -d --name backend \
              --env DB_HOST=db \
              --env DB_USER=$DB_USER \
              --env DB_PWD=$DB_PASSWORD \
              --env DB_DATABASE=$DB_NAME \
              -p 4000:4000 \
              --link db:db \
              $DOCKERHUB_USERNAME/application-code-backend:latest
            echo "Backend container running."

            echo "Starting frontend container..."
            docker run -d --name frontend \
              -p 3000:80 \
              --link backend:backend-container \
              $DOCKERHUB_USERNAME/application-code-frontend:latest
            echo "Frontend container running and application deployed successfully!"
